[package]
name = "rgb-core"
version = "0.9.0"
license = "MIT"
authors = ["Dr Maxim Orlovsky <orlovsky@lnp-bp.org>"]
description = "RGB Core Library: consensus & verification for private & scalable client-validated smart contracts on Bitcoin & Lightning"
repository = "https://github.com/RGB-WG/rgb-core"
homepage = "https://rgb.tech"
keywords = ["bitcoin", "lightning", "rgb", "smart-contracts", "lnp-bp"]
categories = ["cryptography::cryptocurrencies"]
readme = "README.md"
edition = "2021"
rust-version = "1.59.0"
exclude = [".github", "contrib"]

[lib]
name = "rgb"
path = "src/lib.rs"

# Dependencies
# ============
#
# Version policy
# --------------
# The policy in specifying dependencies versions are to use tilde requirements
# according to
# <https://doc.rust-lang.org/nightly/cargo/reference/specifying-dependencies.html?highlight=feature#tilde-requirements>
# with full semver version specification (major, minor and patch components)
# which means that we may upgrade for patches/bugfixes, but must not change
# even the minor version of the package.
# Once the library is stable consider upgrading tilde requirements to strict
# equivalence requirements (with '=' sign) since even dependencies patching will
# not introduce risk of breaking the consensus and even security updates must
# be done manually after through testing
[dependencies]
# Dependencies on other LNP/BP repositories
# -----------------------------------------
amplify = { version = "~3.13.0", features = ["apfloat"] }
bp-core = { version = "~0.9.0" }
lnpbp = { version = "~0.9.0", features = ["zip"] }
stens = "~0.9.0"
strict_encoding = { version = "~0.9.0", features = ["crypto", "chrono", "bitcoin", "float"] }
commit_verify = { version = "~0.9.0", features = ["rand", "bulletproofs"] }
aluvm = { version = "~0.9.0", features = ["std", "strict_encoding"] }
bitcoin_hashes = "0.11.0"
bp-primitives = "0.10.0-beta.1"
# Core rust projects
# ------------------
#   This strange naming is a workaround for cargo inability to define required
#   features for a dependency. See
#   <https://github.com/rust-lang/api-guidelines/issues/180> for the explanation
#   and references.
half = "~2.1.0"
serde_crate = { package = "serde", version = "1", features = ["derive"], optional = true }
serde_with = { version = "1.14", features = ["hex"], optional = true }
serde_json = "1" # TODO: Remove
once_cell = "1.12.0"
secp256k1-zkp = { version = "0.7.0", features = ["rand-std", "global-context"] }

[dev-dependencies]
serde_json = "1"
strict_encoding_test = "0.9.0"

[features]
default = []
all = ["serde"]
serde = ["serde_crate", "serde_with", "half/serde",
         "amplify/serde", "commit_verify/serde", "strict_encoding/serde",
         "lnpbp/serde", "amplify/serde", "bp-core/serde", "stens/serde", "aluvm/serde",
         "secp256k1-zkp/serde", "bp-primitives/serde"]
