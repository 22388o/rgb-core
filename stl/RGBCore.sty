{-
  Id: Ax3G8buaFZj3zTpT9PpN3q6j3od1XKjqL9aeE3Vy7FV1
  Name: RGBCore
  Description: Consensus layer for RGB smart contracts
  Author: Dr Maxim Orlovsky <orlovsky@lnp-bp.org>
  Copyright (C) 2023 LNP/BP Standards Association. All rights reserved.
  License: Apache-2.0
-}

typelib RGB -- burger_arsenal_raymond_Ax3G8buaFZj3zTpT9PpN3q6j3od1XKjqL9aeE3Vy7FV1

import subject_leonid_rudolf_3VG9Cjoyx9MMAY2y4EZBgX9YQoyMngFfNrGLAUFbzQFU as StrictTypes
import iris_sonata_silk_4ehbEH9C5H4LkqwHURAetPzthDaqMEwpVKT5eyJQuEko as AluVM
import gate_garcia_robin_DsDVAwMKHjQjHHzWzJ4G1pMQ4ygkGUDezDZ5Aj7uJGta as BPCore
import oberon_parker_cobra_GVur9D96gWvVkXNkss6nTXn3qyLG4tvT3G7AeLwFZACo as Bitcoin


data AluScript        :: libs AluVM.LibId, entryPoints {[Byte ^ 3] -> AluVM.LibSite}
data AssignAttach     :: confidential (seal BPCore.ConcealedSeal, state ConcealedAttach)
                       | confidentialState (seal BPCore.RevealedSeal, state ConcealedAttach)
                       | confidentialSeal (seal BPCore.ConcealedSeal, state RevealedAttach)
                       | revealed (seal BPCore.RevealedSeal, state RevealedAttach)
data AssignFungible   :: confidential (seal BPCore.ConcealedSeal, state ConcealedFungible)
                       | confidentialState (seal BPCore.RevealedSeal, state ConcealedFungible)
                       | confidentialSeal (seal BPCore.ConcealedSeal, state RevealedFungible)
                       | revealed (seal BPCore.RevealedSeal, state RevealedFungible)
data AssignRight      :: confidential (seal BPCore.ConcealedSeal, state VoidState)
                       | confidentialState (seal BPCore.RevealedSeal, state VoidState)
                       | confidentialSeal (seal BPCore.ConcealedSeal, state VoidState)
                       | revealed (seal BPCore.RevealedSeal, state VoidState)
data AssignState      :: confidential (seal BPCore.ConcealedSeal, state ConcealedData)
                       | confidentialState (seal BPCore.RevealedSeal, state ConcealedData)
                       | confidentialSeal (seal BPCore.ConcealedSeal, state RevealedData)
                       | revealed (seal BPCore.RevealedSeal, state RevealedData)
data AttachId         :: [U8 ^ 32]
data BlindingFactor   :: [U8 ^ 32]
data BundleItem       :: inputs {U16 ^ ..0xff}, transition Transition?
data ConcealedAttach  :: [U8 ^ 32]
data ConcealedData    :: [U8 ^ 32]
data ConcealedFungible :: commitment PedersenCommitment, rangeProof RangeProof
data ContractId       :: [U8 ^ 32]
data Extension        :: ffv Ffv
                       , extensionType U16
                       , contractId ContractId
                       , metadata [U8]?
                       , globalState GlobalState
                       , ownedState OwnedState
                       , redeemed {[Byte ^ 32] -> ^ ..0xff {U16 ^ ..0xff}}
                       , valencies {U16 ^ ..0xff}
data ExtensionSchema  :: metadata StrictTypes.SemId?
                       , globalState {U16 -> ^ ..0xff Occurrences}
                       , redeems {U16 ^ ..0xff}
                       , ownedState {U16 -> ^ ..0xff Occurrences}
                       , valencies {U16 ^ ..0xff}
data Ffv              :: U16
data FungibleState    :: bits64:8 U64
data FungibleType     :: unsigned64Bit:8
data Genesis          :: ffv Ffv
                       , schemaId SchemaId
                       , chain Bitcoin.Chain
                       , metadata [U8]?
                       , globalState GlobalState
                       , ownedState OwnedState
                       , valencies {U16 ^ ..0xff}
data GenesisSchema    :: metadata StrictTypes.SemId?
                       , globalState {U16 -> ^ ..0xff Occurrences}
                       , ownedState {U16 -> ^ ..0xff Occurrences}
                       , valencies {U16 ^ ..0xff}
data GlobalState      :: {U16 -> ^ ..0xff GlobalValues}
data GlobalStateSchema :: semId StrictTypes.SemId, maxItems U16
data GlobalValues     :: [RevealedData ^ 1..0xff]
data NoiseDumb        :: [U8 ^ 512]
data Occurrences      :: min U16, max U16
data OpId             :: [U8 ^ 32]
data OwnedState       :: {U16 -> ^ ..0xff TypedAssign}
data PedersenCommitment :: [U8 ^ 33]
data RangeProof       :: placeholder:255 NoiseDumb
data RevealedAttach   :: id AttachId
                       , mediaType [Unicode ^ ..0xff]
                       , salt U64
data RevealedData     :: [U8]
data RevealedFungible :: value FungibleState, blinding BlindingFactor
data Schema           :: ffv Ffv
                       , subsetOf ()?
                       , globalTypes {U16 -> ^ ..0xff GlobalStateSchema}
                       , ownedTypes {U16 -> ^ ..0xff StateSchema}
                       , valencyTypes {U16 ^ ..0xff}
                       , genesis GenesisSchema
                       , extensions {U16 -> ^ ..0xff ExtensionSchema}
                       , transitions {U16 -> ^ ..0xff TransitionSchema}
                       , typeSystem StrictTypes.TypeSystem
                       , script Script
data SchemaId         :: [U8 ^ 32]
data SchemaSchema     :: ffv Ffv
                       , subsetOf Schema?
                       , globalTypes {U16 -> ^ ..0xff GlobalStateSchema}
                       , ownedTypes {U16 -> ^ ..0xff StateSchema}
                       , valencyTypes {U16 ^ ..0xff}
                       , genesis GenesisSchema
                       , extensions {U16 -> ^ ..0xff ExtensionSchema}
                       , transitions {U16 -> ^ ..0xff TransitionSchema}
                       , typeSystem StrictTypes.TypeSystem
                       , script Script
data Script           :: aluVm AluScript
data StateSchema      :: declarative ()
                       | fungible FungibleType
                       | structured StrictTypes.SemId
                       | attachment ()
data Transition       :: ffv Ffv
                       , transitionType U16
                       , metadata [U8]?
                       , globalState GlobalState
                       , prevState {[Byte ^ 32] -> ^ ..0xff {U16 -> ^ ..0xff [U16 ^ ..0xff]}}
                       , ownedState OwnedState
                       , valencies {U16 ^ ..0xff}
data TransitionBundle :: {[Byte ^ 32] -> ^ ..0xff BundleItem}
data TransitionSchema :: metadata StrictTypes.SemId?
                       , globalState {U16 -> ^ ..0xff Occurrences}
                       , closes {U16 -> ^ ..0xff Occurrences}
                       , ownedState {U16 -> ^ ..0xff Occurrences}
                       , valencies {U16 ^ ..0xff}
data TypedAssign      :: declarative [AssignRight]
                       | fungible [AssignFungible]
                       | structured [AssignState]
                       | attachment:255 [AssignAttach]
data VoidState        :: ()

